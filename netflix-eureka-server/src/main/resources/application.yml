spring:
  application:
    name: netflix-eureka-server #对外暴露的名字，集群务必保证多实例名称一致，不可使用下划线

server:
  port: 8080

# 测试：http://127.0.0.1:8080
eureka:
  instance:
    hostname: 127.0.0.1 # hostname是eureka集群服务器之间的区分
    prefer-ip-address: false  # 如我们不想使用主机名来定义注册中心的地址，也可以使用IP地址的形式，此参数设true，该值默认为false
    lease-renewal-interval-in-seconds: 30  # 参数用于定义服务续约任务的调用间隔时间，默认为30秒
    lease-expiration-duration-in-seconds: 90 # 参数用于定义服务失效的时间，默认为90秒
  client:
    register-with-eureka: true # 是否向自身注册，默认为true向自身注册
    fetch-registry: true # 是否从自身拉取注册信息，默认为true，集群必须设置为true才能配合ribbon使用负载均衡
    service-url:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/ # 服务注册默认中心地址，以逗号分割，有几台Eureka就写几个地址
  server:
    enable-self-preservation: false # 是否开启eureka自我保护状态，默认为true
    eviction-interval-timer-in-ms: 60000 # 开启清除无效服务的定时任务，时间间隔。默认1分钟
    delta-retention-timer-interval-in-ms: 0 # 间隔多长时间，清除过期的delta数据renewal-percent-threshold
    disable-delta: false # 过期数据，是否也提供给client
    log-identity-headers: true # eureka服务端是否记录client的身份header
    rate-limiter-enabled: false # 是否开启请求频率限制器
    rate-limiter-burst-size: 10 # 请求频率限制器
    rate-limiter-full-fetch-average-rate: 100 # 请求频率的平均值
    rate-limiter-throttle-standard-clients: false # 是否对标准的client进行频率请求限制。如果是false，则只对非标准client进行限制
    rate-limiter-registry-fetch-average-rate: 500 # 注册服务、拉去服务列表数据的请求频率的平均值
    rate-limiter-privileged-clients: # 设置信任的client list
    renewal-percent-threshold: 0.85 # 在设置的时间范围类，期望与client续约的百分比。
